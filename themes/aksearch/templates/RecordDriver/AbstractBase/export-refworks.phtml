<?
// A driver-specific template may pass in format overrides; check for these before going to the driver itself:
$formats = isset($this->overrideFormats) ? $this->overrideFormats : $this->driver->tryMethod('getFormats');
$pubType = $this->driver->tryMethod('getPublicationTypeFromIndex');
$structType = $this->driver->tryMethod('getStructType');
$sourceType = null;
if (is_array($formats)) {
	if (in_array('printed', $formats)) {
		$sourceType = 'Print(0)';
		$format = 'Book, Whole';
		if (isset($pubType)) {
			if ($pubType == 'Monographisch') {
				if ($structType != null && ($structType == 'Chapter' || $structType == 'Aufsatz')) {
					$format = 'Book, Section';
				}
			} else if ($pubType == 'Serie' || $pubType == 'Mehrbändig' || $pubType == 'Fortsetzung' || $pubType == 'Zeitschriftenartig') {
				$format = 'Book, Whole';
			} else if ($pubType == 'Unselbständig') {
				if ($structType != null && ($structType == 'Artikel' || $structType == 'Article' || $structType == 'Rezension' || $structType == 'Review' || $structType == 'Editorial')) {
					$format = 'Journal Article';
				}
			} else {
				$format = 'Generic';
			}
		}
	} else if (in_array('electronic', $formats)) {
		$sourceType = 'Electronic(1)';
		$format = 'Book, Whole';
		if (isset($pubType)) {
			if ($pubType == 'Monographisch') {
				if ($structType != null && ($structType == 'Chapter' || $structType == 'Aufsatz')) {
					$format = 'Book, Section';
				}
			} else if ($pubType == 'Serie' || $pubType == 'Mehrbändig' || $pubType == 'Fortsetzung' || $pubType == 'Zeitschriftenartig') {
				$format = 'Book, Whole';
			} else if ($pubType == 'Unselbständig') {
				if ($structType != null && ($structType == 'Artikel' || $structType == 'Article' || $structType == 'Rezension' || $structType == 'Review' || $structType == 'Editorial')) {
					$format = 'Journal, Electronic';
				}
			} else {
				$format = 'Generic';
			}
		}
	} else if (in_array('dvd', $formats) || in_array('videorecording', $formats) || in_array('filmforprojection', $formats) || in_array('avunknown', $formats)) {
		$format = 'Video/ DVD';
	} else if (in_array('compactdisc', $formats) || in_array('soundcarrier', $formats)) {
		$format = 'Sound Recording';
	} else if (in_array('mapcard', $formats)) {
		$format = 'Map';
	} else if (in_array('manuscript', $formats)) {
		$format = 'Generic';
	} else if (in_array('file', $formats)) {
		$format = 'Computer Program';
	} else {
		$format = 'Generic';
	}
}
echo "RT $format\n";

if ($sourceType != null) {
	echo "SR $sourceType\n";
}

$title = rtrim($this->driver->getTitle(), " /");
echo "T1 $title\n";

$series = $this->driver->tryMethod('getSeries');
if (is_array($series)) {
    foreach ($series as $current) {
        echo 'T2 ' . (is_array($current) ? $current['name'] : $current) . "\n";
    }
}

$journalTitle = $this->driver->tryMethod('getArticleParentTitle');
if ($journalTitle != null && !empty($journalTitle)) {
    echo "JF $journalTitle\n";
    $volume = $this->driver->tryMethod('getArticleParentVolumeNo');
    if ($volume != null && !empty($volume)) {
        echo "VO $volume\n";
    }
    $number = $this->driver->tryMethod('getArticleParentIssueNo');
    if ($number != null && !empty($number)) {
        echo "IS $number\n";
    }
    $page = $this->driver->tryMethod('getArticlePageFrom');
    if ($page != null && !empty($page)) {
        echo "SP $page\n";
        $end = $this->driver->tryMethod('getArticlePageTo');
        if ($end != null && !empty($end)) {
            echo "OP $end\n";
        }
    }
}

$participants = $this->driver->tryMethod('getParticipants');
foreach ($participants as $role => $participant) {
	if (stripos($role, 'heraus') !== false || stripos($role, 'hrsg') !== false || stripos($role, 'editor') !== false || stripos($role, 'corporateeditor') !== false || stripos($role, 'edt') !== false || stripos($role, 'isb') !== false) {
		foreach ($participant as $key => $gndAndName) {
			$name = $gndAndName[key($gndAndName)];
			echo "A2 $name\n";
		}
	} else {
		foreach ($participant as $key => $gndAndName) {
			$name = $gndAndName[key($gndAndName)];
			echo "A1 $name\n";
		}
	}
}

$languages = $this->driver->tryMethod('getLanguages');
if (is_array($languages)) {
    foreach ($languages as $lang) {
        echo "LA $lang\n";
    }
}

$pubPlaces = $this->driver->tryMethod('getPlacesOfPublication');
$pubDates = $this->driver->tryMethod('getPublicationDates');
$pubNames = $this->driver->tryMethod('getPublishers');
if (is_array($pubPlaces) && is_array($pubDates) && is_array($pubNames)) {
    $total = min(count($pubPlaces), count($pubDates), count($pubNames));
    // if we have pub dates but no other details, we still want to export the year:
    if ($total == 0 && count($pubDates) > 0) {
        $total = 1;
    }
    for ($i = 0; $i < $total; $i++) {
        if (isset($pubPlaces[$i])) {
            echo "PP " . rtrim(str_replace(array('[', ']'), '', $pubPlaces[$i]), ': '). "\n";
        }
        if (isset($pubNames[$i])) {
            echo "PB " . rtrim($pubNames[$i], ", ") . "\n";
        }
        $date = trim($pubDates[$i], '[]. ');
        if (strlen($date) > 4) {
            $date = $this->dateTime()->extractYear($date);
        }
        if ($date) {
            echo "YR $date\n";
        }
    }
}

$edition = $this->driver->tryMethod('getEdition');
if (!empty($edition)) {
    echo "ED $edition\n";
}

$urls = $this->driver->tryMethod('getURLs');
if (!empty($urls)) {
	foreach ($urls as $urlArray) {
		if ($urlArray['desc'] == 'Volltext' || $urlArray['desc'] == 'Fulltext' || $urlArray['desc'] == 'SSOAR' || $urlArray['desc'] == 'DOAJ') {
			$url = $urlArray['url'];
			echo "LK " . $url . "\n";
		}
	}
}
$urlToAKsearchRecord = $this->serverUrl($this->recordLink()->getUrl($this->driver));
echo "LK " . $urlToAKsearchRecord . "\n";

$summary = $this->driver->tryMethod('getAbstract');
if (is_array($summary)) {
    foreach ($summary as $current) {
        echo "AB $current\n";
    }
}

// Try to find a page count in the physical description:
$physical = $this->driver->tryMethod('getPhysicalDescriptions');
if (is_array($physical)) {
    foreach ($physical as $current) {
        if (preg_match('/([0-9]+)\s*p/', $current, $matches)) {
            echo "OP {$matches[1]}\n";
            break;
        }
    }
}

$notes = $this->driver->tryMethod('getGeneralNotes');
if (is_array($notes)) {
    foreach ($notes as $note) {
        echo "NO $note\n";
    }
}

$callNo = $this->driver->tryMethod('getCallNumber');
if (!empty($callNo)) {
    echo "CN $callNo\n";
}

//echo "SL AK Bibliothek Wien für Sozialwissenschaften\n";

$digitalLocations = $this->driver->tryMethod('getDigitalLocation');
if ($digitalLocations != null) {
	$digitalLocation = $digitalLocations[0];
	if ($digitalLocation == 'eMedien') {
		$digitalLocation = 'eMedien der AK Wien';
	}
	echo "DB $digitalLocation\n";
	echo "DS Online\n";
}

$isbns = $this->driver->tryMethod('getISBNs');
if (is_array($isbns)) {
    foreach ($isbns as $isbn) {
        echo "SN $isbn\n";
    }
}

$issns = $this->driver->tryMethod('getISSNs');
if (is_array($issns)) {
	foreach ($issns as $issn) {
		echo "SN $issn\n";
	}
}

$subjects = $this->driver->tryMethod('getAllSubjectHeadings');
if (is_array($subjects)) {
    foreach ($subjects as $subject) {
        $subject = is_array($subject) ? implode(' : ', $subject) : $subject;
        echo "K1 $subject\n";
    }
}

if ($doi = $this->driver->tryMethod('getCleanDOI')) {
    echo "DO $doi\n";
}

// Record separator:
echo "\n";
?>